//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServoDataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ServoSMSEntities : DbContext
    {
        public ServoSMSEntities()
            : base("name=ServoSMSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Person> Persons { get; set; }
    
        public virtual int getBalanceSheet(string from_date, string to_date)
        {
            var from_dateParameter = from_date != null ?
                new ObjectParameter("From_date", from_date) :
                new ObjectParameter("From_date", typeof(string));
    
            var to_dateParameter = to_date != null ?
                new ObjectParameter("To_date", to_date) :
                new ObjectParameter("To_date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getBalanceSheet", from_dateParameter, to_dateParameter);
        }
    
        public virtual int getProfitLoss(string from_date, string to_date)
        {
            var from_dateParameter = from_date != null ?
                new ObjectParameter("From_date", from_date) :
                new ObjectParameter("From_date", typeof(string));
    
            var to_dateParameter = to_date != null ?
                new ObjectParameter("To_date", to_date) :
                new ObjectParameter("To_date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getProfitLoss", from_dateParameter, to_dateParameter);
        }
    
        public virtual int MasterUpdatePurchaseMaster(string invoice_No, Nullable<System.DateTime> invoice_Date, string vehicle_No, string vndr_Invoice_No, Nullable<System.DateTime> vndr_Invoice_Date, string promo_Scheme, string remarks, string grand_Total, string discount, string discount_Type, string net_Amount, Nullable<double> cash_Discount, string cash_Disc_Type, Nullable<double> iGST_Amount, string vendor_Name, string city, Nullable<double> tradeval, Nullable<double> trade_Discount, Nullable<double> ebird, Nullable<double> ebird_Discount, Nullable<double> entry_Tax1, string entry_Tax_Type, Nullable<double> foc_Discount, string foc_Discount_Type, Nullable<double> fixed_Discount, string fixed_Discount_Type, Nullable<double> totalqtyltr, string mode_of_Payment, Nullable<double> new_fixdisc, string new_fixdamount, Nullable<double> cGST_Amount, Nullable<double> sGST_Amount, Nullable<double> birdless, Nullable<double> tradeless)
        {
            var invoice_NoParameter = invoice_No != null ?
                new ObjectParameter("Invoice_No", invoice_No) :
                new ObjectParameter("Invoice_No", typeof(string));
    
            var invoice_DateParameter = invoice_Date.HasValue ?
                new ObjectParameter("Invoice_Date", invoice_Date) :
                new ObjectParameter("Invoice_Date", typeof(System.DateTime));
    
            var vehicle_NoParameter = vehicle_No != null ?
                new ObjectParameter("Vehicle_No", vehicle_No) :
                new ObjectParameter("Vehicle_No", typeof(string));
    
            var vndr_Invoice_NoParameter = vndr_Invoice_No != null ?
                new ObjectParameter("Vndr_Invoice_No", vndr_Invoice_No) :
                new ObjectParameter("Vndr_Invoice_No", typeof(string));
    
            var vndr_Invoice_DateParameter = vndr_Invoice_Date.HasValue ?
                new ObjectParameter("Vndr_Invoice_Date", vndr_Invoice_Date) :
                new ObjectParameter("Vndr_Invoice_Date", typeof(System.DateTime));
    
            var promo_SchemeParameter = promo_Scheme != null ?
                new ObjectParameter("Promo_Scheme", promo_Scheme) :
                new ObjectParameter("Promo_Scheme", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var grand_TotalParameter = grand_Total != null ?
                new ObjectParameter("Grand_Total", grand_Total) :
                new ObjectParameter("Grand_Total", typeof(string));
    
            var discountParameter = discount != null ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(string));
    
            var discount_TypeParameter = discount_Type != null ?
                new ObjectParameter("Discount_Type", discount_Type) :
                new ObjectParameter("Discount_Type", typeof(string));
    
            var net_AmountParameter = net_Amount != null ?
                new ObjectParameter("Net_Amount", net_Amount) :
                new ObjectParameter("Net_Amount", typeof(string));
    
            var cash_DiscountParameter = cash_Discount.HasValue ?
                new ObjectParameter("Cash_Discount", cash_Discount) :
                new ObjectParameter("Cash_Discount", typeof(double));
    
            var cash_Disc_TypeParameter = cash_Disc_Type != null ?
                new ObjectParameter("Cash_Disc_Type", cash_Disc_Type) :
                new ObjectParameter("Cash_Disc_Type", typeof(string));
    
            var iGST_AmountParameter = iGST_Amount.HasValue ?
                new ObjectParameter("IGST_Amount", iGST_Amount) :
                new ObjectParameter("IGST_Amount", typeof(double));
    
            var vendor_NameParameter = vendor_Name != null ?
                new ObjectParameter("Vendor_Name", vendor_Name) :
                new ObjectParameter("Vendor_Name", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var tradevalParameter = tradeval.HasValue ?
                new ObjectParameter("Tradeval", tradeval) :
                new ObjectParameter("Tradeval", typeof(double));
    
            var trade_DiscountParameter = trade_Discount.HasValue ?
                new ObjectParameter("Trade_Discount", trade_Discount) :
                new ObjectParameter("Trade_Discount", typeof(double));
    
            var ebirdParameter = ebird.HasValue ?
                new ObjectParameter("Ebird", ebird) :
                new ObjectParameter("Ebird", typeof(double));
    
            var ebird_DiscountParameter = ebird_Discount.HasValue ?
                new ObjectParameter("Ebird_Discount", ebird_Discount) :
                new ObjectParameter("Ebird_Discount", typeof(double));
    
            var entry_Tax1Parameter = entry_Tax1.HasValue ?
                new ObjectParameter("Entry_Tax1", entry_Tax1) :
                new ObjectParameter("Entry_Tax1", typeof(double));
    
            var entry_Tax_TypeParameter = entry_Tax_Type != null ?
                new ObjectParameter("Entry_Tax_Type", entry_Tax_Type) :
                new ObjectParameter("Entry_Tax_Type", typeof(string));
    
            var foc_DiscountParameter = foc_Discount.HasValue ?
                new ObjectParameter("Foc_Discount", foc_Discount) :
                new ObjectParameter("Foc_Discount", typeof(double));
    
            var foc_Discount_TypeParameter = foc_Discount_Type != null ?
                new ObjectParameter("Foc_Discount_Type", foc_Discount_Type) :
                new ObjectParameter("Foc_Discount_Type", typeof(string));
    
            var fixed_DiscountParameter = fixed_Discount.HasValue ?
                new ObjectParameter("fixed_Discount", fixed_Discount) :
                new ObjectParameter("fixed_Discount", typeof(double));
    
            var fixed_Discount_TypeParameter = fixed_Discount_Type != null ?
                new ObjectParameter("fixed_Discount_Type", fixed_Discount_Type) :
                new ObjectParameter("fixed_Discount_Type", typeof(string));
    
            var totalqtyltrParameter = totalqtyltr.HasValue ?
                new ObjectParameter("totalqtyltr", totalqtyltr) :
                new ObjectParameter("totalqtyltr", typeof(double));
    
            var mode_of_PaymentParameter = mode_of_Payment != null ?
                new ObjectParameter("Mode_of_Payment", mode_of_Payment) :
                new ObjectParameter("Mode_of_Payment", typeof(string));
    
            var new_fixdiscParameter = new_fixdisc.HasValue ?
                new ObjectParameter("New_fixdisc", new_fixdisc) :
                new ObjectParameter("New_fixdisc", typeof(double));
    
            var new_fixdamountParameter = new_fixdamount != null ?
                new ObjectParameter("New_fixdamount", new_fixdamount) :
                new ObjectParameter("New_fixdamount", typeof(string));
    
            var cGST_AmountParameter = cGST_Amount.HasValue ?
                new ObjectParameter("CGST_Amount", cGST_Amount) :
                new ObjectParameter("CGST_Amount", typeof(double));
    
            var sGST_AmountParameter = sGST_Amount.HasValue ?
                new ObjectParameter("SGST_Amount", sGST_Amount) :
                new ObjectParameter("SGST_Amount", typeof(double));
    
            var birdlessParameter = birdless.HasValue ?
                new ObjectParameter("Birdless", birdless) :
                new ObjectParameter("Birdless", typeof(double));
    
            var tradelessParameter = tradeless.HasValue ?
                new ObjectParameter("Tradeless", tradeless) :
                new ObjectParameter("Tradeless", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MasterUpdatePurchaseMaster", invoice_NoParameter, invoice_DateParameter, vehicle_NoParameter, vndr_Invoice_NoParameter, vndr_Invoice_DateParameter, promo_SchemeParameter, remarksParameter, grand_TotalParameter, discountParameter, discount_TypeParameter, net_AmountParameter, cash_DiscountParameter, cash_Disc_TypeParameter, iGST_AmountParameter, vendor_NameParameter, cityParameter, tradevalParameter, trade_DiscountParameter, ebirdParameter, ebird_DiscountParameter, entry_Tax1Parameter, entry_Tax_TypeParameter, foc_DiscountParameter, foc_Discount_TypeParameter, fixed_DiscountParameter, fixed_Discount_TypeParameter, totalqtyltrParameter, mode_of_PaymentParameter, new_fixdiscParameter, new_fixdamountParameter, cGST_AmountParameter, sGST_AmountParameter, birdlessParameter, tradelessParameter);
        }
    
        public virtual int ProCustomerEntry(string cust_ID, string cust_Name, string cust_Type, string entryDate, string sadbhavnacd, string address, string city, string state, string country, string tel_Res, string tel_Off, string mobile, string eMail, string cR_Limit, string cR_Days, string op_Balance, string balance_Type, string tin_No, Nullable<int> sSR, string contactPerson)
        {
            var cust_IDParameter = cust_ID != null ?
                new ObjectParameter("Cust_ID", cust_ID) :
                new ObjectParameter("Cust_ID", typeof(string));
    
            var cust_NameParameter = cust_Name != null ?
                new ObjectParameter("Cust_Name", cust_Name) :
                new ObjectParameter("Cust_Name", typeof(string));
    
            var cust_TypeParameter = cust_Type != null ?
                new ObjectParameter("Cust_Type", cust_Type) :
                new ObjectParameter("Cust_Type", typeof(string));
    
            var entryDateParameter = entryDate != null ?
                new ObjectParameter("EntryDate", entryDate) :
                new ObjectParameter("EntryDate", typeof(string));
    
            var sadbhavnacdParameter = sadbhavnacd != null ?
                new ObjectParameter("sadbhavnacd", sadbhavnacd) :
                new ObjectParameter("sadbhavnacd", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var tel_ResParameter = tel_Res != null ?
                new ObjectParameter("Tel_Res", tel_Res) :
                new ObjectParameter("Tel_Res", typeof(string));
    
            var tel_OffParameter = tel_Off != null ?
                new ObjectParameter("Tel_Off", tel_Off) :
                new ObjectParameter("Tel_Off", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var eMailParameter = eMail != null ?
                new ObjectParameter("EMail", eMail) :
                new ObjectParameter("EMail", typeof(string));
    
            var cR_LimitParameter = cR_Limit != null ?
                new ObjectParameter("CR_Limit", cR_Limit) :
                new ObjectParameter("CR_Limit", typeof(string));
    
            var cR_DaysParameter = cR_Days != null ?
                new ObjectParameter("CR_Days", cR_Days) :
                new ObjectParameter("CR_Days", typeof(string));
    
            var op_BalanceParameter = op_Balance != null ?
                new ObjectParameter("Op_Balance", op_Balance) :
                new ObjectParameter("Op_Balance", typeof(string));
    
            var balance_TypeParameter = balance_Type != null ?
                new ObjectParameter("Balance_Type", balance_Type) :
                new ObjectParameter("Balance_Type", typeof(string));
    
            var tin_NoParameter = tin_No != null ?
                new ObjectParameter("Tin_No", tin_No) :
                new ObjectParameter("Tin_No", typeof(string));
    
            var sSRParameter = sSR.HasValue ?
                new ObjectParameter("SSR", sSR) :
                new ObjectParameter("SSR", typeof(int));
    
            var contactPersonParameter = contactPerson != null ?
                new ObjectParameter("ContactPerson", contactPerson) :
                new ObjectParameter("ContactPerson", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProCustomerEntry", cust_IDParameter, cust_NameParameter, cust_TypeParameter, entryDateParameter, sadbhavnacdParameter, addressParameter, cityParameter, stateParameter, countryParameter, tel_ResParameter, tel_OffParameter, mobileParameter, eMailParameter, cR_LimitParameter, cR_DaysParameter, op_BalanceParameter, balance_TypeParameter, tin_NoParameter, sSRParameter, contactPersonParameter);
        }
    
        public virtual int ProLeaveEntry(string emp_Name, string dateFrom, string dateTo, string reason, string days)
        {
            var emp_NameParameter = emp_Name != null ?
                new ObjectParameter("Emp_Name", emp_Name) :
                new ObjectParameter("Emp_Name", typeof(string));
    
            var dateFromParameter = dateFrom != null ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(string));
    
            var dateToParameter = dateTo != null ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(string));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            var daysParameter = days != null ?
                new ObjectParameter("Days", days) :
                new ObjectParameter("Days", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProLeaveEntry", emp_NameParameter, dateFromParameter, dateToParameter, reasonParameter, daysParameter);
        }
    
        public virtual int ProLeaveUpdate(string emp_Name, string dateFrom, string dateTo, string reason, string isSanction)
        {
            var emp_NameParameter = emp_Name != null ?
                new ObjectParameter("Emp_Name", emp_Name) :
                new ObjectParameter("Emp_Name", typeof(string));
    
            var dateFromParameter = dateFrom != null ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(string));
    
            var dateToParameter = dateTo != null ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(string));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            var isSanctionParameter = isSanction != null ?
                new ObjectParameter("isSanction", isSanction) :
                new ObjectParameter("isSanction", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProLeaveUpdate", emp_NameParameter, dateFromParameter, dateToParameter, reasonParameter, isSanctionParameter);
        }
    
        public virtual int ProPriceUpdateEntry(string eff_Date, string prod_Name, string pack_Type, string pur_Rate, string sal_Rate, string hSN, string iGST, string cGST, string sGST)
        {
            var eff_DateParameter = eff_Date != null ?
                new ObjectParameter("Eff_Date", eff_Date) :
                new ObjectParameter("Eff_Date", typeof(string));
    
            var prod_NameParameter = prod_Name != null ?
                new ObjectParameter("Prod_Name", prod_Name) :
                new ObjectParameter("Prod_Name", typeof(string));
    
            var pack_TypeParameter = pack_Type != null ?
                new ObjectParameter("Pack_Type", pack_Type) :
                new ObjectParameter("Pack_Type", typeof(string));
    
            var pur_RateParameter = pur_Rate != null ?
                new ObjectParameter("Pur_Rate", pur_Rate) :
                new ObjectParameter("Pur_Rate", typeof(string));
    
            var sal_RateParameter = sal_Rate != null ?
                new ObjectParameter("Sal_Rate", sal_Rate) :
                new ObjectParameter("Sal_Rate", typeof(string));
    
            var hSNParameter = hSN != null ?
                new ObjectParameter("HSN", hSN) :
                new ObjectParameter("HSN", typeof(string));
    
            var iGSTParameter = iGST != null ?
                new ObjectParameter("IGST", iGST) :
                new ObjectParameter("IGST", typeof(string));
    
            var cGSTParameter = cGST != null ?
                new ObjectParameter("CGST", cGST) :
                new ObjectParameter("CGST", typeof(string));
    
            var sGSTParameter = sGST != null ?
                new ObjectParameter("SGST", sGST) :
                new ObjectParameter("SGST", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProPriceUpdateEntry", eff_DateParameter, prod_NameParameter, pack_TypeParameter, pur_RateParameter, sal_RateParameter, hSNParameter, iGSTParameter, cGSTParameter, sGSTParameter);
        }
    
        public virtual int ProPriceUpdation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProPriceUpdation");
        }
    
        public virtual int ProPurchaseMasterEntry(Nullable<int> invoice_No, Nullable<System.DateTime> invoice_Date, string mode_of_Payment, string vendor_Name, string city, string vehicle_No, string vndr_Invoice_No, Nullable<System.DateTime> vndr_Invoice_Date, Nullable<double> grand_Total, Nullable<double> discount, string disc_Type, Nullable<double> net_Amount, string promo_Scheme, string remark, string entry_By, Nullable<System.DateTime> entry_Time, Nullable<double> cash_Discount, string cash_Disc_Type, Nullable<double> iGST_Amount, Nullable<double> tradeval, Nullable<double> trade_Discount, Nullable<double> ebird, Nullable<double> ebird_Discount, Nullable<double> entry_Tax1, string entry_Tax_Type, Nullable<double> foc_Discount, string foc_Discount_Type, Nullable<double> fixed_Discount, string fixed_Discount_Type, Nullable<double> totalqtyltr, Nullable<double> new_fixdisc, string new_fixdamount, Nullable<double> cGST_Amount, Nullable<double> sGST_Amount, Nullable<double> birdless, Nullable<double> tradeless)
        {
            var invoice_NoParameter = invoice_No.HasValue ?
                new ObjectParameter("Invoice_No", invoice_No) :
                new ObjectParameter("Invoice_No", typeof(int));
    
            var invoice_DateParameter = invoice_Date.HasValue ?
                new ObjectParameter("Invoice_Date", invoice_Date) :
                new ObjectParameter("Invoice_Date", typeof(System.DateTime));
    
            var mode_of_PaymentParameter = mode_of_Payment != null ?
                new ObjectParameter("Mode_of_Payment", mode_of_Payment) :
                new ObjectParameter("Mode_of_Payment", typeof(string));
    
            var vendor_NameParameter = vendor_Name != null ?
                new ObjectParameter("Vendor_Name", vendor_Name) :
                new ObjectParameter("Vendor_Name", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var vehicle_NoParameter = vehicle_No != null ?
                new ObjectParameter("Vehicle_No", vehicle_No) :
                new ObjectParameter("Vehicle_No", typeof(string));
    
            var vndr_Invoice_NoParameter = vndr_Invoice_No != null ?
                new ObjectParameter("Vndr_Invoice_No", vndr_Invoice_No) :
                new ObjectParameter("Vndr_Invoice_No", typeof(string));
    
            var vndr_Invoice_DateParameter = vndr_Invoice_Date.HasValue ?
                new ObjectParameter("Vndr_Invoice_Date", vndr_Invoice_Date) :
                new ObjectParameter("Vndr_Invoice_Date", typeof(System.DateTime));
    
            var grand_TotalParameter = grand_Total.HasValue ?
                new ObjectParameter("Grand_Total", grand_Total) :
                new ObjectParameter("Grand_Total", typeof(double));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(double));
    
            var disc_TypeParameter = disc_Type != null ?
                new ObjectParameter("Disc_Type", disc_Type) :
                new ObjectParameter("Disc_Type", typeof(string));
    
            var net_AmountParameter = net_Amount.HasValue ?
                new ObjectParameter("Net_Amount", net_Amount) :
                new ObjectParameter("Net_Amount", typeof(double));
    
            var promo_SchemeParameter = promo_Scheme != null ?
                new ObjectParameter("Promo_Scheme", promo_Scheme) :
                new ObjectParameter("Promo_Scheme", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var entry_ByParameter = entry_By != null ?
                new ObjectParameter("Entry_By", entry_By) :
                new ObjectParameter("Entry_By", typeof(string));
    
            var entry_TimeParameter = entry_Time.HasValue ?
                new ObjectParameter("Entry_Time", entry_Time) :
                new ObjectParameter("Entry_Time", typeof(System.DateTime));
    
            var cash_DiscountParameter = cash_Discount.HasValue ?
                new ObjectParameter("Cash_Discount", cash_Discount) :
                new ObjectParameter("Cash_Discount", typeof(double));
    
            var cash_Disc_TypeParameter = cash_Disc_Type != null ?
                new ObjectParameter("Cash_Disc_Type", cash_Disc_Type) :
                new ObjectParameter("Cash_Disc_Type", typeof(string));
    
            var iGST_AmountParameter = iGST_Amount.HasValue ?
                new ObjectParameter("IGST_Amount", iGST_Amount) :
                new ObjectParameter("IGST_Amount", typeof(double));
    
            var tradevalParameter = tradeval.HasValue ?
                new ObjectParameter("Tradeval", tradeval) :
                new ObjectParameter("Tradeval", typeof(double));
    
            var trade_DiscountParameter = trade_Discount.HasValue ?
                new ObjectParameter("Trade_Discount", trade_Discount) :
                new ObjectParameter("Trade_Discount", typeof(double));
    
            var ebirdParameter = ebird.HasValue ?
                new ObjectParameter("Ebird", ebird) :
                new ObjectParameter("Ebird", typeof(double));
    
            var ebird_DiscountParameter = ebird_Discount.HasValue ?
                new ObjectParameter("Ebird_Discount", ebird_Discount) :
                new ObjectParameter("Ebird_Discount", typeof(double));
    
            var entry_Tax1Parameter = entry_Tax1.HasValue ?
                new ObjectParameter("Entry_Tax1", entry_Tax1) :
                new ObjectParameter("Entry_Tax1", typeof(double));
    
            var entry_Tax_TypeParameter = entry_Tax_Type != null ?
                new ObjectParameter("Entry_Tax_Type", entry_Tax_Type) :
                new ObjectParameter("Entry_Tax_Type", typeof(string));
    
            var foc_DiscountParameter = foc_Discount.HasValue ?
                new ObjectParameter("Foc_Discount", foc_Discount) :
                new ObjectParameter("Foc_Discount", typeof(double));
    
            var foc_Discount_TypeParameter = foc_Discount_Type != null ?
                new ObjectParameter("Foc_Discount_Type", foc_Discount_Type) :
                new ObjectParameter("Foc_Discount_Type", typeof(string));
    
            var fixed_DiscountParameter = fixed_Discount.HasValue ?
                new ObjectParameter("fixed_Discount", fixed_Discount) :
                new ObjectParameter("fixed_Discount", typeof(double));
    
            var fixed_Discount_TypeParameter = fixed_Discount_Type != null ?
                new ObjectParameter("fixed_Discount_Type", fixed_Discount_Type) :
                new ObjectParameter("fixed_Discount_Type", typeof(string));
    
            var totalqtyltrParameter = totalqtyltr.HasValue ?
                new ObjectParameter("totalqtyltr", totalqtyltr) :
                new ObjectParameter("totalqtyltr", typeof(double));
    
            var new_fixdiscParameter = new_fixdisc.HasValue ?
                new ObjectParameter("New_fixdisc", new_fixdisc) :
                new ObjectParameter("New_fixdisc", typeof(double));
    
            var new_fixdamountParameter = new_fixdamount != null ?
                new ObjectParameter("New_fixdamount", new_fixdamount) :
                new ObjectParameter("New_fixdamount", typeof(string));
    
            var cGST_AmountParameter = cGST_Amount.HasValue ?
                new ObjectParameter("CGST_Amount", cGST_Amount) :
                new ObjectParameter("CGST_Amount", typeof(double));
    
            var sGST_AmountParameter = sGST_Amount.HasValue ?
                new ObjectParameter("SGST_Amount", sGST_Amount) :
                new ObjectParameter("SGST_Amount", typeof(double));
    
            var birdlessParameter = birdless.HasValue ?
                new ObjectParameter("Birdless", birdless) :
                new ObjectParameter("Birdless", typeof(double));
    
            var tradelessParameter = tradeless.HasValue ?
                new ObjectParameter("Tradeless", tradeless) :
                new ObjectParameter("Tradeless", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProPurchaseMasterEntry", invoice_NoParameter, invoice_DateParameter, mode_of_PaymentParameter, vendor_NameParameter, cityParameter, vehicle_NoParameter, vndr_Invoice_NoParameter, vndr_Invoice_DateParameter, grand_TotalParameter, discountParameter, disc_TypeParameter, net_AmountParameter, promo_SchemeParameter, remarkParameter, entry_ByParameter, entry_TimeParameter, cash_DiscountParameter, cash_Disc_TypeParameter, iGST_AmountParameter, tradevalParameter, trade_DiscountParameter, ebirdParameter, ebird_DiscountParameter, entry_Tax1Parameter, entry_Tax_TypeParameter, foc_DiscountParameter, foc_Discount_TypeParameter, fixed_DiscountParameter, fixed_Discount_TypeParameter, totalqtyltrParameter, new_fixdiscParameter, new_fixdamountParameter, cGST_AmountParameter, sGST_AmountParameter, birdlessParameter, tradelessParameter);
        }
    
        public virtual int ProPurchaseMasterUpdate(Nullable<int> invoice_No, Nullable<System.DateTime> invoice_Date, string mode_of_Payment, string vendor_Name, string city, string vehicle_No, string vndr_Invoice_No, Nullable<System.DateTime> vndr_Invoice_Date, Nullable<double> grand_Total, Nullable<double> discount, string discount_Type, Nullable<double> net_Amount, string promo_Scheme, string remark, string entry_By, Nullable<System.DateTime> entry_Time, Nullable<double> cash_Discount, string cash_Disc_Type, Nullable<double> iGST_Amount, Nullable<double> cGST_Amount, Nullable<double> sGST_Amount)
        {
            var invoice_NoParameter = invoice_No.HasValue ?
                new ObjectParameter("Invoice_No", invoice_No) :
                new ObjectParameter("Invoice_No", typeof(int));
    
            var invoice_DateParameter = invoice_Date.HasValue ?
                new ObjectParameter("Invoice_Date", invoice_Date) :
                new ObjectParameter("Invoice_Date", typeof(System.DateTime));
    
            var mode_of_PaymentParameter = mode_of_Payment != null ?
                new ObjectParameter("Mode_of_Payment", mode_of_Payment) :
                new ObjectParameter("Mode_of_Payment", typeof(string));
    
            var vendor_NameParameter = vendor_Name != null ?
                new ObjectParameter("Vendor_Name", vendor_Name) :
                new ObjectParameter("Vendor_Name", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var vehicle_NoParameter = vehicle_No != null ?
                new ObjectParameter("Vehicle_No", vehicle_No) :
                new ObjectParameter("Vehicle_No", typeof(string));
    
            var vndr_Invoice_NoParameter = vndr_Invoice_No != null ?
                new ObjectParameter("Vndr_Invoice_No", vndr_Invoice_No) :
                new ObjectParameter("Vndr_Invoice_No", typeof(string));
    
            var vndr_Invoice_DateParameter = vndr_Invoice_Date.HasValue ?
                new ObjectParameter("Vndr_Invoice_Date", vndr_Invoice_Date) :
                new ObjectParameter("Vndr_Invoice_Date", typeof(System.DateTime));
    
            var grand_TotalParameter = grand_Total.HasValue ?
                new ObjectParameter("Grand_Total", grand_Total) :
                new ObjectParameter("Grand_Total", typeof(double));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(double));
    
            var discount_TypeParameter = discount_Type != null ?
                new ObjectParameter("Discount_Type", discount_Type) :
                new ObjectParameter("Discount_Type", typeof(string));
    
            var net_AmountParameter = net_Amount.HasValue ?
                new ObjectParameter("Net_Amount", net_Amount) :
                new ObjectParameter("Net_Amount", typeof(double));
    
            var promo_SchemeParameter = promo_Scheme != null ?
                new ObjectParameter("Promo_Scheme", promo_Scheme) :
                new ObjectParameter("Promo_Scheme", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var entry_ByParameter = entry_By != null ?
                new ObjectParameter("Entry_By", entry_By) :
                new ObjectParameter("Entry_By", typeof(string));
    
            var entry_TimeParameter = entry_Time.HasValue ?
                new ObjectParameter("Entry_Time", entry_Time) :
                new ObjectParameter("Entry_Time", typeof(System.DateTime));
    
            var cash_DiscountParameter = cash_Discount.HasValue ?
                new ObjectParameter("Cash_Discount", cash_Discount) :
                new ObjectParameter("Cash_Discount", typeof(double));
    
            var cash_Disc_TypeParameter = cash_Disc_Type != null ?
                new ObjectParameter("Cash_Disc_Type", cash_Disc_Type) :
                new ObjectParameter("Cash_Disc_Type", typeof(string));
    
            var iGST_AmountParameter = iGST_Amount.HasValue ?
                new ObjectParameter("IGST_Amount", iGST_Amount) :
                new ObjectParameter("IGST_Amount", typeof(double));
    
            var cGST_AmountParameter = cGST_Amount.HasValue ?
                new ObjectParameter("CGST_Amount", cGST_Amount) :
                new ObjectParameter("CGST_Amount", typeof(double));
    
            var sGST_AmountParameter = sGST_Amount.HasValue ?
                new ObjectParameter("SGST_Amount", sGST_Amount) :
                new ObjectParameter("SGST_Amount", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProPurchaseMasterUpdate", invoice_NoParameter, invoice_DateParameter, mode_of_PaymentParameter, vendor_NameParameter, cityParameter, vehicle_NoParameter, vndr_Invoice_NoParameter, vndr_Invoice_DateParameter, grand_TotalParameter, discountParameter, discount_TypeParameter, net_AmountParameter, promo_SchemeParameter, remarkParameter, entry_ByParameter, entry_TimeParameter, cash_DiscountParameter, cash_Disc_TypeParameter, iGST_AmountParameter, cGST_AmountParameter, sGST_AmountParameter);
        }
    
        public virtual int ProSalesMasterEntry(Nullable<int> invoice_No, Nullable<System.DateTime> invoice_Date, string sales_Type, string under_SalesMan, string cust_Name, string place, string vehicle_No, Nullable<double> grand_Total, Nullable<double> discount, string disc_Type, Nullable<double> net_Amount, string promo_Scheme, string remark, string entry_By, Nullable<System.DateTime> entry_Time, Nullable<int> slip_No, Nullable<double> cash_Discount, string cash_Disc_Type, Nullable<double> iGST_Amount, Nullable<double> credit_Limit, Nullable<double> schdiscount, Nullable<double> foediscount, string foediscounttype, Nullable<double> foediscountrs, Nullable<double> totalqtyltr, Nullable<int> challanNo, Nullable<System.DateTime> challanDate, Nullable<int> order_No, string secSPDisc, Nullable<double> sGST_Amount, Nullable<double> cGST_Amount)
        {
            var invoice_NoParameter = invoice_No.HasValue ?
                new ObjectParameter("Invoice_No", invoice_No) :
                new ObjectParameter("Invoice_No", typeof(int));
    
            var invoice_DateParameter = invoice_Date.HasValue ?
                new ObjectParameter("Invoice_Date", invoice_Date) :
                new ObjectParameter("Invoice_Date", typeof(System.DateTime));
    
            var sales_TypeParameter = sales_Type != null ?
                new ObjectParameter("Sales_Type", sales_Type) :
                new ObjectParameter("Sales_Type", typeof(string));
    
            var under_SalesManParameter = under_SalesMan != null ?
                new ObjectParameter("Under_SalesMan", under_SalesMan) :
                new ObjectParameter("Under_SalesMan", typeof(string));
    
            var cust_NameParameter = cust_Name != null ?
                new ObjectParameter("Cust_Name", cust_Name) :
                new ObjectParameter("Cust_Name", typeof(string));
    
            var placeParameter = place != null ?
                new ObjectParameter("Place", place) :
                new ObjectParameter("Place", typeof(string));
    
            var vehicle_NoParameter = vehicle_No != null ?
                new ObjectParameter("Vehicle_No", vehicle_No) :
                new ObjectParameter("Vehicle_No", typeof(string));
    
            var grand_TotalParameter = grand_Total.HasValue ?
                new ObjectParameter("Grand_Total", grand_Total) :
                new ObjectParameter("Grand_Total", typeof(double));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(double));
    
            var disc_TypeParameter = disc_Type != null ?
                new ObjectParameter("Disc_Type", disc_Type) :
                new ObjectParameter("Disc_Type", typeof(string));
    
            var net_AmountParameter = net_Amount.HasValue ?
                new ObjectParameter("Net_Amount", net_Amount) :
                new ObjectParameter("Net_Amount", typeof(double));
    
            var promo_SchemeParameter = promo_Scheme != null ?
                new ObjectParameter("Promo_Scheme", promo_Scheme) :
                new ObjectParameter("Promo_Scheme", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var entry_ByParameter = entry_By != null ?
                new ObjectParameter("Entry_By", entry_By) :
                new ObjectParameter("Entry_By", typeof(string));
    
            var entry_TimeParameter = entry_Time.HasValue ?
                new ObjectParameter("Entry_Time", entry_Time) :
                new ObjectParameter("Entry_Time", typeof(System.DateTime));
    
            var slip_NoParameter = slip_No.HasValue ?
                new ObjectParameter("Slip_No", slip_No) :
                new ObjectParameter("Slip_No", typeof(int));
    
            var cash_DiscountParameter = cash_Discount.HasValue ?
                new ObjectParameter("Cash_Discount", cash_Discount) :
                new ObjectParameter("Cash_Discount", typeof(double));
    
            var cash_Disc_TypeParameter = cash_Disc_Type != null ?
                new ObjectParameter("Cash_Disc_Type", cash_Disc_Type) :
                new ObjectParameter("Cash_Disc_Type", typeof(string));
    
            var iGST_AmountParameter = iGST_Amount.HasValue ?
                new ObjectParameter("IGST_Amount", iGST_Amount) :
                new ObjectParameter("IGST_Amount", typeof(double));
    
            var credit_LimitParameter = credit_Limit.HasValue ?
                new ObjectParameter("Credit_Limit", credit_Limit) :
                new ObjectParameter("Credit_Limit", typeof(double));
    
            var schdiscountParameter = schdiscount.HasValue ?
                new ObjectParameter("schdiscount", schdiscount) :
                new ObjectParameter("schdiscount", typeof(double));
    
            var foediscountParameter = foediscount.HasValue ?
                new ObjectParameter("foediscount", foediscount) :
                new ObjectParameter("foediscount", typeof(double));
    
            var foediscounttypeParameter = foediscounttype != null ?
                new ObjectParameter("foediscounttype", foediscounttype) :
                new ObjectParameter("foediscounttype", typeof(string));
    
            var foediscountrsParameter = foediscountrs.HasValue ?
                new ObjectParameter("foediscountrs", foediscountrs) :
                new ObjectParameter("foediscountrs", typeof(double));
    
            var totalqtyltrParameter = totalqtyltr.HasValue ?
                new ObjectParameter("totalqtyltr", totalqtyltr) :
                new ObjectParameter("totalqtyltr", typeof(double));
    
            var challanNoParameter = challanNo.HasValue ?
                new ObjectParameter("ChallanNo", challanNo) :
                new ObjectParameter("ChallanNo", typeof(int));
    
            var challanDateParameter = challanDate.HasValue ?
                new ObjectParameter("ChallanDate", challanDate) :
                new ObjectParameter("ChallanDate", typeof(System.DateTime));
    
            var order_NoParameter = order_No.HasValue ?
                new ObjectParameter("Order_No", order_No) :
                new ObjectParameter("Order_No", typeof(int));
    
            var secSPDiscParameter = secSPDisc != null ?
                new ObjectParameter("SecSPDisc", secSPDisc) :
                new ObjectParameter("SecSPDisc", typeof(string));
    
            var sGST_AmountParameter = sGST_Amount.HasValue ?
                new ObjectParameter("SGST_Amount", sGST_Amount) :
                new ObjectParameter("SGST_Amount", typeof(double));
    
            var cGST_AmountParameter = cGST_Amount.HasValue ?
                new ObjectParameter("CGST_Amount", cGST_Amount) :
                new ObjectParameter("CGST_Amount", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProSalesMasterEntry", invoice_NoParameter, invoice_DateParameter, sales_TypeParameter, under_SalesManParameter, cust_NameParameter, placeParameter, vehicle_NoParameter, grand_TotalParameter, discountParameter, disc_TypeParameter, net_AmountParameter, promo_SchemeParameter, remarkParameter, entry_ByParameter, entry_TimeParameter, slip_NoParameter, cash_DiscountParameter, cash_Disc_TypeParameter, iGST_AmountParameter, credit_LimitParameter, schdiscountParameter, foediscountParameter, foediscounttypeParameter, foediscountrsParameter, totalqtyltrParameter, challanNoParameter, challanDateParameter, order_NoParameter, secSPDiscParameter, sGST_AmountParameter, cGST_AmountParameter);
        }
    
        public virtual int ProSalesMasterUpdate(Nullable<int> invoice_No, Nullable<System.DateTime> invoice_Date, string sales_Type, string under_SalesMan, string cust_Name, string place, string vehicle_No, string grand_Total, string discount, string disc_Type, string net_Amount, string promo_Scheme, string remark, string entry_By, Nullable<System.DateTime> entry_Time, string slip_No, Nullable<double> credit_Limit, Nullable<double> cash_Discount, string cash_Disc_Type, Nullable<double> iGST_Amount, Nullable<double> schdiscount, Nullable<double> foediscount, string foediscounttype, Nullable<double> foediscountrs, Nullable<double> totalqtyltr, Nullable<int> challanNo, Nullable<System.DateTime> challanDate, string secSPDisc, Nullable<double> cGST_Amount, Nullable<double> sGST_Amount)
        {
            var invoice_NoParameter = invoice_No.HasValue ?
                new ObjectParameter("Invoice_No", invoice_No) :
                new ObjectParameter("Invoice_No", typeof(int));
    
            var invoice_DateParameter = invoice_Date.HasValue ?
                new ObjectParameter("Invoice_Date", invoice_Date) :
                new ObjectParameter("Invoice_Date", typeof(System.DateTime));
    
            var sales_TypeParameter = sales_Type != null ?
                new ObjectParameter("Sales_Type", sales_Type) :
                new ObjectParameter("Sales_Type", typeof(string));
    
            var under_SalesManParameter = under_SalesMan != null ?
                new ObjectParameter("Under_SalesMan", under_SalesMan) :
                new ObjectParameter("Under_SalesMan", typeof(string));
    
            var cust_NameParameter = cust_Name != null ?
                new ObjectParameter("Cust_Name", cust_Name) :
                new ObjectParameter("Cust_Name", typeof(string));
    
            var placeParameter = place != null ?
                new ObjectParameter("Place", place) :
                new ObjectParameter("Place", typeof(string));
    
            var vehicle_NoParameter = vehicle_No != null ?
                new ObjectParameter("Vehicle_No", vehicle_No) :
                new ObjectParameter("Vehicle_No", typeof(string));
    
            var grand_TotalParameter = grand_Total != null ?
                new ObjectParameter("Grand_Total", grand_Total) :
                new ObjectParameter("Grand_Total", typeof(string));
    
            var discountParameter = discount != null ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(string));
    
            var disc_TypeParameter = disc_Type != null ?
                new ObjectParameter("Disc_Type", disc_Type) :
                new ObjectParameter("Disc_Type", typeof(string));
    
            var net_AmountParameter = net_Amount != null ?
                new ObjectParameter("Net_Amount", net_Amount) :
                new ObjectParameter("Net_Amount", typeof(string));
    
            var promo_SchemeParameter = promo_Scheme != null ?
                new ObjectParameter("Promo_Scheme", promo_Scheme) :
                new ObjectParameter("Promo_Scheme", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var entry_ByParameter = entry_By != null ?
                new ObjectParameter("Entry_By", entry_By) :
                new ObjectParameter("Entry_By", typeof(string));
    
            var entry_TimeParameter = entry_Time.HasValue ?
                new ObjectParameter("Entry_Time", entry_Time) :
                new ObjectParameter("Entry_Time", typeof(System.DateTime));
    
            var slip_NoParameter = slip_No != null ?
                new ObjectParameter("Slip_No", slip_No) :
                new ObjectParameter("Slip_No", typeof(string));
    
            var credit_LimitParameter = credit_Limit.HasValue ?
                new ObjectParameter("Credit_Limit", credit_Limit) :
                new ObjectParameter("Credit_Limit", typeof(double));
    
            var cash_DiscountParameter = cash_Discount.HasValue ?
                new ObjectParameter("Cash_Discount", cash_Discount) :
                new ObjectParameter("Cash_Discount", typeof(double));
    
            var cash_Disc_TypeParameter = cash_Disc_Type != null ?
                new ObjectParameter("Cash_Disc_Type", cash_Disc_Type) :
                new ObjectParameter("Cash_Disc_Type", typeof(string));
    
            var iGST_AmountParameter = iGST_Amount.HasValue ?
                new ObjectParameter("IGST_Amount", iGST_Amount) :
                new ObjectParameter("IGST_Amount", typeof(double));
    
            var schdiscountParameter = schdiscount.HasValue ?
                new ObjectParameter("schdiscount", schdiscount) :
                new ObjectParameter("schdiscount", typeof(double));
    
            var foediscountParameter = foediscount.HasValue ?
                new ObjectParameter("foediscount", foediscount) :
                new ObjectParameter("foediscount", typeof(double));
    
            var foediscounttypeParameter = foediscounttype != null ?
                new ObjectParameter("foediscounttype", foediscounttype) :
                new ObjectParameter("foediscounttype", typeof(string));
    
            var foediscountrsParameter = foediscountrs.HasValue ?
                new ObjectParameter("foediscountrs", foediscountrs) :
                new ObjectParameter("foediscountrs", typeof(double));
    
            var totalqtyltrParameter = totalqtyltr.HasValue ?
                new ObjectParameter("totalqtyltr", totalqtyltr) :
                new ObjectParameter("totalqtyltr", typeof(double));
    
            var challanNoParameter = challanNo.HasValue ?
                new ObjectParameter("ChallanNo", challanNo) :
                new ObjectParameter("ChallanNo", typeof(int));
    
            var challanDateParameter = challanDate.HasValue ?
                new ObjectParameter("ChallanDate", challanDate) :
                new ObjectParameter("ChallanDate", typeof(System.DateTime));
    
            var secSPDiscParameter = secSPDisc != null ?
                new ObjectParameter("SecSPDisc", secSPDisc) :
                new ObjectParameter("SecSPDisc", typeof(string));
    
            var cGST_AmountParameter = cGST_Amount.HasValue ?
                new ObjectParameter("CGST_Amount", cGST_Amount) :
                new ObjectParameter("CGST_Amount", typeof(double));
    
            var sGST_AmountParameter = sGST_Amount.HasValue ?
                new ObjectParameter("SGST_Amount", sGST_Amount) :
                new ObjectParameter("SGST_Amount", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProSalesMasterUpdate", invoice_NoParameter, invoice_DateParameter, sales_TypeParameter, under_SalesManParameter, cust_NameParameter, placeParameter, vehicle_NoParameter, grand_TotalParameter, discountParameter, disc_TypeParameter, net_AmountParameter, promo_SchemeParameter, remarkParameter, entry_ByParameter, entry_TimeParameter, slip_NoParameter, credit_LimitParameter, cash_DiscountParameter, cash_Disc_TypeParameter, iGST_AmountParameter, schdiscountParameter, foediscountParameter, foediscounttypeParameter, foediscountrsParameter, totalqtyltrParameter, challanNoParameter, challanDateParameter, secSPDiscParameter, cGST_AmountParameter, sGST_AmountParameter);
        }
    
        public virtual int ProUpdateAccountsLedger(string voucher_ID, Nullable<int> ledger_ID, Nullable<double> amount, string type, string invoice_Date)
        {
            var voucher_IDParameter = voucher_ID != null ?
                new ObjectParameter("Voucher_ID", voucher_ID) :
                new ObjectParameter("Voucher_ID", typeof(string));
    
            var ledger_IDParameter = ledger_ID.HasValue ?
                new ObjectParameter("Ledger_ID", ledger_ID) :
                new ObjectParameter("Ledger_ID", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(double));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var invoice_DateParameter = invoice_Date != null ?
                new ObjectParameter("Invoice_Date", invoice_Date) :
                new ObjectParameter("Invoice_Date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProUpdateAccountsLedger", voucher_IDParameter, ledger_IDParameter, amountParameter, typeParameter, invoice_DateParameter);
        }
    
        public virtual int sp_BatchStock(string fromdate)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BatchStock", fromdateParameter);
        }
    
        public virtual int sp_stock(string fromdate)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_stock", fromdateParameter);
        }
    
        public virtual int sp_stockmovement(Nullable<int> id, string strfromdate, string strtodate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var strfromdateParameter = strfromdate != null ?
                new ObjectParameter("strfromdate", strfromdate) :
                new ObjectParameter("strfromdate", typeof(string));
    
            var strtodateParameter = strtodate != null ?
                new ObjectParameter("strtodate", strtodate) :
                new ObjectParameter("strtodate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_stockmovement", idParameter, strfromdateParameter, strtodateParameter);
        }
    
        public virtual int UpdateAccountsLedgerForCustomer(Nullable<int> ledger_ID, string invoice_Date)
        {
            var ledger_IDParameter = ledger_ID.HasValue ?
                new ObjectParameter("Ledger_ID", ledger_ID) :
                new ObjectParameter("Ledger_ID", typeof(int));
    
            var invoice_DateParameter = invoice_Date != null ?
                new ObjectParameter("Invoice_Date", invoice_Date) :
                new ObjectParameter("Invoice_Date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAccountsLedgerForCustomer", ledger_IDParameter, invoice_DateParameter);
        }
    }
}
